left_join(dist_s1, by="series") %>%
mutate(series = as.character(series)) %>%
ggplot(aes(x=Day, y=abund_norm, color=series, size=-dtw_dist)) +
geom_point() +
geom_line() +
#geom_smooth(method="loess", se=F) +
facet_wrap(~series) +
theme_test()
test_long %>%
left_join(dist_s1, by="series") %>%
mutate(series = as.character(series)) %>%
ggplot(aes(x=Day, y=abund_norm, color=series, size=-dtw_dist)) +
#geom_point() +
#geom_line() +
geom_smooth(method="loess", se=F) +
facet_wrap(~series) +
theme_test()
?dtw::symmetric2
ls
head(dist_s1)
test_long %>%
left_join(dist_s1, by="series") %>%
mutate(series = as.character(series)) %>%
ggplot(aes(x=Day, y=abund_norm, color=dtw_dist)) +
geom_point() +
geom_line() +
#geom_smooth(method="loess", se=F) +
facet_wrap(~series) +
theme_test()
# Compared to s1
dist_s1 <- data.frame(dtw_df[1,]) %>%
pivot_longer(everything()) %>%
mutate(series = row_number()) %>%
select(series, dtw_dist=value)
test_long %>%
left_join(dist_s1, by="series") %>%
mutate(series = as.character(series)) %>%
ggplot(aes(x=Day, y=abund_norm, color=dtw_dist)) +
geom_point() +
geom_line() +
#geom_smooth(method="loess", se=F) +
facet_wrap(~series) +
theme_test()
test_long %>%
left_join(dist_s1, by="series") %>%
mutate(series = as.character(series)) %>%
ggplot(aes(x=Day, y=abund_norm, color=dtw_dist)) +
#geom_point() +
#geom_line() +
geom_smooth(method="loess", se=F) +
facet_wrap(~series) +
theme_test()
# Compared to s1
dist_s1 <- data.frame(dtw_df[1,]) %>%
pivot_longer(everything()) %>%
mutate(series = row_number()) %>%
select(series, dtw_dist=value)
test_long %>%
left_join(dist_s1, by="series") %>%
mutate(series = as.character(series)) %>%
ggplot(aes(x=Day, y=abund_norm, color=-dtw_dist)) +
geom_point() +
geom_line() +
#geom_smooth(method="loess", se=F) +
facet_wrap(~series) +
theme_test()
test_long %>%
left_join(dist_s1, by="series") %>%
mutate(series = as.character(series)) %>%
ggplot(aes(x=Day, y=abund_norm, color=-dtw_dist)) +
#geom_point() +
#geom_line() +
geom_smooth(method="loess", se=F) +
facet_wrap(~series) +
theme_test()
head(dist_s1)
head(test_long)
# Compared to s13
dist_s13 <- data.frame(dtw_df[13,]) %>%
pivot_longer(everything()) %>%
mutate(series = row_number()) %>%
select(series, dtw_dist=value)
test_long %>%
left_join(dist_s13, by="series") %>%
mutate(series = as.character(series)) %>%
ggplot(aes(x=Day, y=abund_norm, color=-dtw_dist)) +
geom_point() +
geom_line() +
#geom_smooth(method="loess", se=F) +
facet_wrap(~series) +
theme_test()
test_long %>%
left_join(dist_s13, by="series") %>%
mutate(series = as.character(series)) %>%
ggplot(aes(x=Day, y=abund_norm, color=-dtw_dist)) +
#geom_point() +
#geom_line() +
geom_smooth(method="loess", se=F) +
facet_wrap(~series) +
theme_test()
head(dtw_dist)
head(dtw_df)
?dist
df<-data.frame(site.x=c("A","A","A","B","B","C"),
site.y=c("B","C","D","C","D","D"),Distance=c(67,57,64,60,67,60))
df
dij2 <- with(df, Distance)
dij2
?Distance
?with
dij2 <- with(df, Distance)
nams <- with(df, unique(c(as.character(site.x), as.character(site.y))))
attributes(dij2) <- with(df, list(Size = length(nams),
Labels = nams,
Diag = FALSE,
Upper = FALSE,
method = "user"))
dij2
class(dij2) <- "dist"
dij2
df
dtw_df
class(dij2)
class(dtw_df)
dij2
df
head(dtw_df)
dtw_df2 <- dtw_df %>%
pivot_longer(names_to = "series2", values_to="dist")
dtw_df2 <- dtw_df %>%
pivot_longer(everything(), names_to = "series2", values_to="dist")
dtw_df2
dtw_df2 <- dtw_df %>%
rownames_to_column(var="series1") %>%
pivot_longer(everything(), names_to = "series2", values_to="dist")
dtw_df2 <- dtw_df %>%
rownames_to_column(var="series1") %>%
pivot_longer(-series1, names_to = "series2", values_to="dist")
dtw_df2
dtw_df2 <- dtw_df %>%
rownames_to_column(var="series1") %>%
pivot_longer(-series1, names_to = "series2", values_to = "dist") %>%
mutate(series2 = gsub("...([0-9]+)", "/1", series2))
dtw_df2
dtw_df2 <- dtw_df %>%
rownames_to_column(var="series1") %>%
pivot_longer(-series1, names_to = "series2", values_to = "dist") %>%
mutate(series2 = gsub("...([0-9]+)", "(1)", series2))
dtw_df2
dtw_df2 <- dtw_df %>%
rownames_to_column(var="series1") %>%
pivot_longer(-series1, names_to = "series2", values_to = "dist") %>%
mutate(series2 = gsub("...([0-9]+)", "(/1)", series2))
head(dtw_df2)
dtw_df2 <- dtw_df %>%
rownames_to_column(var="series1") %>%
pivot_longer(-series1, names_to = "series2", values_to = "dist") %>%
mutate(series2 = gsub("...([0-9]+)", "(//1)", series2))
dtw_df2
dtw_df2 <- dtw_df %>%
rownames_to_column(var="series1") %>%
pivot_longer(-series1, names_to = "series2", values_to = "dist") %>%
mutate(series2 = gsub("...([0-9]+)", "//1", series2))
dtw_df2
dtw_df2 <- dtw_df %>%
rownames_to_column(var="series1") %>%
pivot_longer(-series1, names_to = "series2", values_to = "dist") %>%
mutate(series2 = gsub("...([0-9]+)", "///1", series2))
dtw_df2
dtw_df2 <- dtw_df %>%
rownames_to_column(var="series1") %>%
pivot_longer(-series1, names_to = "series2", values_to = "dist") %>%
mutate(series2 = gsub("...([0-9]+)", "/1", series2))
dtw_df2
dtw_df2 <- dtw_df %>%
rownames_to_column(var="series1") %>%
pivot_longer(-series1, names_to = "series2", values_to = "dist") %>%
mutate(series2 = gsub("...([0-9]+)", "\\1", series2))
dtw_df2
View(dtw_df2)
class(dtw_df2$series2)
class(dtw_df2$series1)
dtw_df2 <- dtw_df %>%
rownames_to_column(var="series1") %>%
pivot_longer(-series1, names_to = "series2", values_to = "dist") %>%
mutate(series2 = as.numeric(gsub("...([0-9]+)", "\\1", series2)))
dtw_df2
dtw_df2 <- dtw_df %>%
rownames_to_column(var="series1") %>%
pivot_longer(-series1, names_to = "series2", values_to = "dist") %>%
mutate(series1 = as.numeric(series1),
series2 = as.numeric(gsub("...([0-9]+)", "\\1", series2)))
head(dtw_df2)
# Example
df<-data.frame(site.x=c("A","A","A","B","B","C"),
site.y=c("B","C","D","C","D","D"), Distance=c(67,57,64,60,67,60))
head(dij2)
?df
?with
df
dij2
# Example
df <- data.frame(site.x=c("A","A","A","B","B","C"),
site.y=c("B","C","D","C","D","D"),
Distance=c(67,57,64,60,67,60))
dij2 <- with(df, Distance)
df
dij2
nams <- with(df, unique(c(as.character(site.x), as.character(site.y))))
nams
dtw_df2
# Convert to dist class object
x <- with(dtw_df2, dist)
x
series <- with(dtw_df2, unique(c(as.character(series1), as.character(series2))))
series
nams
attributes(x) <- with(dtw_df2, list(Size = length(series),
Labels = series),
Diag = FALSE,
Upper = FALSE,
method = "user")
x
class(x) <- "dist"
x
length(series)
series
dij2
# Example
df <- data.frame(site.x=c("A","A","A","B","B","C"),
site.y=c("B","C","D","C","D","D"),
Distance=c(67,57,64,60,67,60))
dij2 <- with(df, Distance)
nams <- with(df, unique(c(as.character(site.x), as.character(site.y))))
attributes(dij2) <- with(df, list(Size = length(nams),
Labels = nams,
Diag = FALSE,
Upper = FALSE,
method = "user"))
class(dij2) <- "dist"
dij2
x
head(x)
View(x)
x
View(dist_df)
View(dtw_df)
df
head(dtw_df2)
# Reformat
dtw_df2 <- dtw_df %>%
rownames_to_column(var="series1") %>%
pivot_longer(-series1, names_to = "series2", values_to = "dist") %>%
mutate(series1 = as.numeric(series1),
series2 = as.numeric(gsub("...([0-9]+)", "\\1", series2))) %>%
filter(dist!=0) # remove self-comparisons
head(dtw_df2)
# Convert to dist class object
x <- with(dtw_df2, dist)
series <- with(dtw_df2, unique(c(as.character(series1), as.character(series2))))
attributes(x) <- with(dtw_df2, list(Size = length(series),
Labels = series),
Diag = FALSE,
Upper = FALSE,
method = "user")
class(x) <- "dist" # problem, rows start at 2
x
# Convert to dist class object
dtw_dist <- with(dtw_df2, dist)
series <- with(dtw_df2, unique(c(as.character(series1), as.character(series2))))
attributes(x) <- with(dtw_df2, list(Size = length(series),
Labels = series),
Diag = FALSE,
Upper = FALSE,
method = "user")
class(dtw_dist) <- "dist" # problem, rows start at 2
dtw_dist
# Convert to dist class object
dtw_dist <- with(dtw_df2, dist)
series <- with(dtw_df2, unique(c(as.character(series1), as.character(series2))))
attributes(dtw_dist) <- with(dtw_df2, list(Size = length(series),
Labels = series),
Diag = FALSE,
Upper = FALSE,
method = "user")
class(dtw_dist) <- "dist" # problem, rows start at 2
dtw_dist
install.packages("factoextrA")
install.packages("factoextra")
install.packages("cluster")
install.packages("cluster")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(results = "show")
knitr::opts_chunk$set(message = FALSE)
# Clear working directory, load in packages, generate package info
rm(list=ls())
library("tidyverse")
library("dtwclust")
library("parallel")
library("doParallel")
sessionInfo()
# Testing data
test <- readRDS("../data_intermediate/NIFA_norm_dtwtest.rds")
# Indvidual
count <- 0
for (l in unique(as.character(test$label))) {
count <- count + 1
# Subset time series
norm_label <- filter(test, label==l) %>%
arrange(Day)
# Title information
title = paste0(count, ". ", l)
# Graph
graph <- ggplot(norm_label, aes(x=Day, y=norm_abund)) +
geom_point(shape=1, size=3, color="#6F7378") +
geom_line(color="#6F7378") +
labs(title=title, x="day", y="ln norm abund") +
theme_test() +
theme(title = element_text(size=18),
axis.title = element_text(size=16),
axis.text = element_text(size=14))
# Print
print(graph)
}
# All together
test %>%
ggplot(aes(x=Day, y=norm_abund, color=label)) +
geom_point() +
geom_line() +
facet_wrap(~label) +
theme_test() +
theme(legend.position = "none")
test %>%
ggplot(aes(x=Day, y=norm_abund, color=label)) +
geom_smooth(method="loess", se=F) +
theme_test() +
theme(legend.position = "none")
# Natural log transform
test_ln <- test %>%
mutate(abund = norm_abund,
abund_ln = log(norm_abund)) %>%
select(label:Day, abund:abund_ln)
# Visualize
test_ln %>%
ggplot(aes(x=Day, y=abund_ln, color=label)) +
geom_point() +
geom_line() +
facet_wrap(~label) +
theme_test() +
theme(legend.position = "none")
test_ln %>%
ggplot(aes(x=Day, y=abund_ln, color=label)) +
geom_point() +
geom_line() +
#facet_wrap(~label) +
theme_test() +
theme(legend.position = "none")
test_ln %>%
ggplot(aes(x=Day, y=abund_ln, color=label)) +
geom_smooth(method="loess", se=F) +
facet_wrap(~label) +
theme_test() +
theme(legend.position = "none")
test_ln %>%
ggplot(aes(x=Day, y=abund_ln, color=label)) +
geom_smooth(method="loess", se=F) +
theme_test() +
theme(legend.position = "none")
# Mean of each time series
ts_mean <- test_ln %>%
group_by(label) %>%
summarize(ts_mean = mean(abund_ln)) %>%
ungroup()
# Offset by mean
test_offset <- test_ln %>%
left_join(ts_mean, by="label") %>%
mutate(abund_offset = abund_ln - ts_mean) %>%
ungroup() %>%
select(label:abund_ln, abund_offset)
# Visualize
test_offset %>%
ggplot(aes(y=abund_offset, x=Day, color=label)) +
geom_smooth(method="loess", se=F) +
theme_test() +
theme(legend.position = "none")
# Mins and maxes of each time series
ts_minmax <- test_offset %>%
group_by(label) %>%
summarize(ts_min = min(abund_offset),
ts_max = max(abund_offset))
# Normalize
# y = (x - min) / (max - min)
test_norm <- test_offset %>%
left_join(ts_minmax, by="label") %>%
mutate(abund_norm = (abund_offset - ts_min)/(ts_max - ts_min))
# Visualize
test_norm %>%
ggplot(aes(x=Day, y=abund_norm, color=label)) +
geom_smooth(method="loess", se=F) +
facet_wrap(~label) +
theme_test() +
theme(legend.position = "none")
test_norm %>%
ggplot(aes(y=abund_norm, x=Day, color=label)) +
geom_smooth(method="loess", se=F) +
theme_test() +
theme(legend.position = "none")
test_ln %>%
ggplot(aes(x=Day, y=abund_ln, color=label)) +
geom_smooth(method="loess", se=F) +
theme_test() +
theme(legend.position = "none")
test_offset %>%
ggplot(aes(y=abund_offset, x=Day, color=label)) +
geom_smooth(method="loess", se=F) +
theme_test() +
theme(legend.position = "none")
test_norm %>%
ggplot(aes(y=abund_norm, x=Day, color=label)) +
geom_smooth(method="loess", se=F) +
theme_test() +
theme(legend.position = "none")
# Give each unique time series a number
series_nums <- data.frame("label"=unique(as.character(test_norm$label)),
"series"=1:length(unique(as.character(test_norm$label))))
# Wide and long format
test_long <- test_norm %>%
left_join(series_nums, by="label") %>%
select(series, label, Day, abund_norm)
test_wide <- test_long %>%
pivot_wider(names_from=Day, values_from=abund_norm)
dtw_df <- data.frame()
for (s1 in as.numeric(test_wide$series)) {
this_row <- NULL
data_s1 <- na.omit(as.numeric(test_wide[s1,3:ncol(test_wide)]))
for (s2 in 1:nrow(test_wide)) {
data_s2 <- na.omit(as.numeric(test_wide[s2,3:ncol(test_wide)]))
dtw_temp <- dtw_basic(data_s1, data_s2) # calculate DTW
this_row <- bind_cols(this_row, dtw_temp)
}
dtw_df <- bind_rows(dtw_df, this_row)
}
# Compared to s1
dist_s1 <- data.frame(dtw_df[1,]) %>%
pivot_longer(everything()) %>%
mutate(series = row_number()) %>%
select(series, dtw_dist=value)
test_long %>%
left_join(dist_s1, by="series") %>%
mutate(series = as.character(series)) %>%
ggplot(aes(x=Day, y=abund_norm, color=-dtw_dist)) +
geom_point() +
geom_line() +
#geom_smooth(method="loess", se=F) +
facet_wrap(~series) +
theme_test()
test_long %>%
left_join(dist_s1, by="series") %>%
mutate(series = as.character(series)) %>%
ggplot(aes(x=Day, y=abund_norm, color=-dtw_dist)) +
#geom_point() +
#geom_line() +
geom_smooth(method="loess", se=F) +
facet_wrap(~series) +
theme_test()
# Compared to s13
dist_s13 <- data.frame(dtw_df[13,]) %>%
pivot_longer(everything()) %>%
mutate(series = row_number()) %>%
select(series, dtw_dist=value)
test_long %>%
left_join(dist_s13, by="series") %>%
mutate(series = as.character(series)) %>%
ggplot(aes(x=Day, y=abund_norm, color=-dtw_dist)) +
geom_point() +
geom_line() +
#geom_smooth(method="loess", se=F) +
facet_wrap(~series) +
theme_test()
test_long %>%
left_join(dist_s13, by="series") %>%
mutate(series = as.character(series)) %>%
ggplot(aes(x=Day, y=abund_norm, color=-dtw_dist)) +
#geom_point() +
#geom_line() +
geom_smooth(method="loess", se=F) +
facet_wrap(~series) +
theme_test()
# Reformat
dtw_df2 <- dtw_df %>%
rownames_to_column(var="series1") %>%
pivot_longer(-series1, names_to = "series2", values_to = "dist") %>%
mutate(series1 = as.numeric(series1),
series2 = as.numeric(gsub("...([0-9]+)", "\\1", series2))) %>%
filter(dist!=0) # remove self-comparisons
# Convert to dist class object
dtw_dist <- with(dtw_df2, dist)
series <- with(dtw_df2, unique(c(as.character(series1), as.character(series2))))
attributes(dtw_dist) <- with(dtw_df2, list(Size = length(series),
Labels = series),
Diag = FALSE,
Upper = FALSE,
method = "user")
class(dtw_dist) <- "dist"
library(factoextra)
library(cluster)
?agnes
# Trying various distance methods
clust <- agnes(df, method = "average")
# Trying various distance methods
clust <- agnes(dtw_df, method = "average")
clust
