abund_total
# Calculate total abundance averaged over time
abund_total_avg <- abund_total %>%
group_by(Soil, Replicate, cluster) %>%
summarize(abund_total = mean(abund_total)) %>%
ungroup()
abund_total_avg
# tp0
abund_total0 <- abund_total %>%
filter(Day==0)
abund_total0
View(abund_total_avg)
# Proportions
abund_overall_avg <- abund_total_avg %>%
group_by(Soil) %>%
summarize(overall_total = sum()) %>%
ungroup()
abund_overall_avg
# Proportions
abund_overall_avg <- abund_total_avg %>%
group_by(Soil) %>%
summarize(overall_total = sum(.)) %>%
ungroup()
abund_overall_avg
# Proportions
abund_overall_avg <- abund_total_avg %>%
group_by(Soil) %>%
summarize(overall_total = sum(abund_total)) %>%
ungroup()
abund_overall_avg
abund_prop_avg <- abund_total_avg %>%
left_join(abund_overall_avg)
abund_prop_avg
# Proportions
abund_overall_avg <- abund_total_avg %>%
group_by(Soil, Replicate) %>%
summarize(overall_total = sum(abund_total)) %>%
ungroup()
abund_overall_avg
abund_prop_avg <- abund_total_avg %>%
left_join(abund_overall_avg) %>%
abund_prop_avg <- abund_total_avg %>%
left_join(abund_overall_avg) %>%
mutate(prop = abund_total/overall_total)
abund_prop_avg <- abund_total_avg %>%
left_join(abund_overall_avg) %>%
mutate(prop = abund_total/overall_total)
abund_prop_avg
# Proportion, avg
abund_prop_avg %>%
ggplot(aes(x=Soil, y=prop, color=cluster)) +
geom_point() +
theme_test()
# Proportion, avg
abund_prop_avg %>%
ggplot(aes(x=Soil, y=prop, color=cluster)) +
geom_jitter() +
theme_test()
# Proportion, avg
abund_prop_avg %>%
ggplot(aes(x=Soil, y=prop, color=cluster)) +
geom_jitter(height=0) +
theme_test()
# Proportion, avg
abund_prop_avg %>%
ggplot(aes(x=Soil, y=prop, color=cluster)) +
geom_jitter(width=0.1, height=0) +
theme_test()
# Proportion, avg
abund_prop_avg %>%
ggplot(aes(x=Soil, y=prop, color=cluster)) +
geom_jitter(width=0.1, height=0) +
scale_color_manual(values=c("#c75d65", "#929644", "#9473c4")) +
theme_test()
propclust_lm <- lm(prop ~ cluster*Soil, data=abund_prop_avg)
hist(resid(propclust_lm))
plot(predict(propclust_lm), resid(propclust_lm))
propclust_lm <- lm(log(prop) ~ cluster*Soil, data=abund_prop_avg)
hist(resid(propclust_lm))
plot(predict(propclust_lm), resid(propclust_lm))
# Switching to welch...
oneway.test(log(prop) ~ cluster, data=filter(abund_prop))
# Switching to welch...
oneway.test(log(prop) ~ cluster, data=filter(abund_prop_avg, Soil=="Ag"))
oneway.test(log(prop) ~ cluster, data=filter(abund_prop_avg, Soil=="Meadow"))
propclust_lm <- lm(log(prop) ~ cluster*Soil, data=filter(abund_prop_avg, Soil=="Ag"))
hist(resid(propclust_lm)) # normalish
propclust_lm <- lm(log(prop) ~ cluster*Soil, data=filter(abund_prop_avg, Soil=="Ag"))
propclust_lm <- lm(log(prop) ~ cluster, data=filter(abund_prop_avg, Soil=="Ag"))
hist(resid(propclust_lm)) # normalish
plot(predict(propclust_lm), resid(propclust_lm)) # heteroskedastic
# Contrasts
propag23_lm <- lm(log(abund_prop) ~ cluster, data=filter(abund_prop_avg, Soil=="Ag" & cluster %in% c("3", "2")))
# Contrasts
propag23_lm <- lm(log(prop) ~ cluster, data=filter(abund_prop_avg, Soil=="Ag" & cluster %in% c("3", "2")))
hist(resid(propag23_lm)) # impossible to say
plot(predict(propag23_lm), resid(propag23_lm)) # homoskedastic
hist(resid(propag23_lm)) # impossible to say
# Contrasts
propag12_lm <- lm(log(prop) ~ cluster, data=filter(abund_prop_avg, Soil=="Ag" & cluster %in% c("1", "2")))
hist(resid(propag12_lm)) # normal
hist(resid(propag12_lm)) # normalish
plot(predict(propag12_lm), resid(propag12_lm)) # heteroskedastic
# Contrasts
propag12_lm <- lm(prop ~ cluster, data=filter(abund_prop_avg, Soil=="Ag" & cluster %in% c("1", "2")))
hist(resid(propag12_lm)) # normalish
plot(predict(propag12_lm), resid(propag12_lm)) # heteroskedastic
# Welch
t.test(prop ~ cluster, data=filter(abund_prop_avg, Soil=="Ag" & cluster %in% c("1", "2"))
# Welch
t.test(prop ~ cluster, data=filter(abund_prop_avg, Soil=="Ag" & cluster %in% c("1", "2")))
# Welch
t.test(prop ~ cluster, data=filter(abund_prop_avg, Soil=="Ag" & cluster %in% c("1", "2")))
propag23_lm <- lm(log(prop) ~ cluster, data=filter(abund_prop_avg, Soil=="Ag" & cluster %in% c("3", "2")))
hist(resid(propag23_lm)) # normal
plot(predict(propag23_lm), resid(propag23_lm)) # heteroskedastic
# Welch t-test
propag23_welch <- t.test(prop ~ cluster, data=filter(abund_prop_avg, Soil=="Ag" & cluster %in% c("1", "2")))
# Welch t-test
propag23_welch <- t.test(prop ~ cluster, data=filter(abund_prop_avg, Soil=="Ag" & cluster %in% c("3", "2")))
propag23_welch
propag13_lm <- lm(log(prop) ~ cluster, data=filter(abund_prop_avg, Soil=="Ag" & cluster %in% c("3", "1")))
propag23_lm <- lm(prop ~ cluster, data=filter(abund_prop_avg, Soil=="Ag" & cluster %in% c("3", "2")))
hist(resid(propag23_lm)) # normal
plot(predict(propag23_lm), resid(propag23_lm)) # heteroskedastic
propag13_lm <- lm(log(prop) ~ cluster, data=filter(abund_prop_avg, Soil=="Ag" & cluster %in% c("3", "1")))
hist(resid(propag13_lm)) # impossible to say
plot(predict(propag13_lm), resid(propag13_lm)) # heteroskedastic
propag13_lm <- lm(prop ~ cluster, data=filter(abund_prop_avg, Soil=="Ag" & cluster %in% c("3", "1")))
hist(resid(propag13_lm)) # impossible to say
plot(predict(propag13_lm), resid(propag13_lm)) # heteroskedastic
# Going to stick with welch anyway to be consistent
propag13_welch <- t.test(prop ~ cluster, data=filter(abund_prop_avg, Soil=="Ag" & cluster %in% c("3", "1")))
propag13_welch
## Meadow
propmead12_lm <- lm(prop ~ cluster, data=filter(abund_prop_avg, Soil=="Meadow" & cluster %in% c("1", "2")))
hist(resid(propmead12_lm)) # normalish
plot(predict(propmead12_lm), resid(propmead12_lm)) # heteroskedastic
## Meadow
propmead12_lm <- lm(log(prop) ~ cluster, data=filter(abund_prop_avg, Soil=="Meadow" & cluster %in% c("1", "2")))
hist(resid(propmead12_lm)) # normalish
plot(predict(propmead12_lm), resid(propmead12_lm)) # heteroskedastic
## Meadow
propmead12_lm <- lm(prop ~ cluster, data=filter(abund_prop_avg, Soil=="Meadow" & cluster %in% c("1", "2")))
hist(resid(propmead12_lm)) # normalish
# Welch t-test (even though not normal, pick your poison situation)
propmead12_welch <- t.test(prop ~ cluster, data=filter(abund_prop_avg, Soil=="Meadow" & cluster %in% c("1", "2")))
propmead12_welch
propmead23_lm <- lm(prop ~ cluster, data=filter(abund_prop_avg, Soil=="Meadow" & cluster %in% c("3", "2")))
hist(resid(propmead23_lm)) # normal
plot(predict(propmead23_lm), resid(propmead23_lm)) # heteroskedastic
propmead23_lm <- lm(log(prop) ~ cluster, data=filter(abund_prop_avg, Soil=="Meadow" & cluster %in% c("3", "2")))
hist(resid(propmead23_lm)) # normalish
plot(predict(propmead23_lm), resid(propmead23_lm)) # heteroskedastic
propmead23_lm <- lm(prop ~ cluster, data=filter(abund_prop_avg, Soil=="Meadow" & cluster %in% c("3", "2")))
hist(resid(propmead23_lm)) # normalish
plot(predict(propmead23_lm), resid(propmead23_lm)) # heteroskedastic
# Welch t-test
propmead23_welch <- t.test(prop ~ cluster, data=filter(abund_prop_avg, Soil=="Meadow" & cluster %in% c("3", "2")))
propmead23_welch
propmead13_lm <- lm(prop ~ cluster, data=filter(abund_prop_avg, Soil=="Meadow" & cluster %in% c("3", "1")))
hist(resid(propmead13_lm)) # impossible to say
plot(predict(propmead13_lm), resid(propmead13_lm)) # homoskedastic
# Going to stick with welch anyway to be consistent
propmead13_welch <- t.test(prop ~ cluster, data=filter(abund_prop_avg, Soil=="Meadow" & cluster %in% c("3", "1")))
propmead13_welch
# P adjustment
p.adjust(p=c(propag12_welch$p.value, propag23_welch$p.value, propag13_welch$p.value,
propag12_welch$p.value, propag23_welch$p.value, propag13_welch$p.value),
method="holm", n=6)
# Welch t-test
propag12_welch <- t.test(prop ~ cluster, data=filter(abund_prop_avg, Soil=="Ag" & cluster %in% c("1", "2")))
# P adjustment
p.adjust(p=c(propag12_welch$p.value, propag23_welch$p.value, propag13_welch$p.value,
propag12_welch$p.value, propag23_welch$p.value, propag13_welch$p.value),
method="holm", n=6)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(results = "show")
knitr::opts_chunk$set(message = FALSE)
# Clear working directory, load in packages, generate package info
rm(list=ls())
library("tidyverse")
sessionInfo()
# Incorporator data from DulLC
incorp <- readRDS("../cluster_fullcyc2/fullcyc2_l2fc_testoutput.rds")
incorp
# Taxonomy of incorporators
incorp_tax <- incorp %>% select(OTU, Phylum:Species)
# Reformat and exclude non-significant results
incorp_sig <- incorp %>%
mutate(ecosystem = gsub(".substrate == '12C-Con' & day == '[0-9]+' & ecosystem == '([a-z]+)'.+", "\\1", .id), # separate out .id column
day = gsub(".substrate == '12C-Con' & day == '([0-9]+)' .+", "\\1", .id),
day = as.numeric(day),
substrate = gsub(".+substrate == '13C-([a-z]+)'.+", "\\1", .id, ignore.case=T),
substrate = case_when(substrate=="Pal" ~ "palmitic acid",
substrate=="Ami" ~ "amino acid",
substrate=="Xyl" ~ "xylose",
substrate=="Cel" ~ "cellulose",
substrate=="Van" ~ "vanillin")) %>%
select(OTU, ecosystem, day, substrate, log2FoldChange, padj) %>%
filter(padj < 0.05) # filter incorporators, Sam says deseq2 was set up so negative log2foldchange indicates incorporation
incorp_sig
incorp_otus <- select(incorp_sig, OTU) %>%
unique()
growth_asvs <- readRDS("../data_intermediate/NIFA_grests_final_ind.rds") %>%
select(ASV) %>%
unique()
blast <- read_tsv("../blast_fullcyc2/nifa_fullcyc2_blastn_parsed.txt")
head(blast)
# Select best hit(s)
blast_best <- filter(blast, Identity >= 97) %>% # remove hits lower than 97% identity
group_by(Query) %>%
summarize(Identity = max(Identity)) %>% # choose highest identity match
ungroup()
blast_best <- semi_join(blast, blast_best)
blast_best
# Tidy up
blast_best <- select(blast_best, ASV=Query, blast_OTU=Hit, blast_identity=Identity, blast_evalue=Evalue)
# Some summary
length(unique(blast_best$Query)) # ASVs matched with at least 97% identity
min(blast_best$Identity) # lowest identity match in queries
# Isolate ASVs with multiple highest hits
blast_dups_logic <- duplicated(blast_best$ASV)
blast_dups_asvs <- blast_best %>%
add_column(duplicated = blast_dups_logic) %>%
filter(duplicated==TRUE) %>%
select(ASV) %>%
unique() %>%
as.list()
# How many ASVs with duplicate equally best hits?
length(blast_dups_asvs$ASV)
# Isolate duplicate hits
blast_dups <- blast_best %>%
filter(ASV %in% blast_dups_asvs$ASV)
# Isolate single hits
blast_sing <- blast_best %>%
filter(!(ASV %in% blast_dups_asvs$ASV))
blast_dups_eval <- blast_dups %>%
group_by(ASV) %>%
summarize(blast_evalue = min(blast_evalue)) %>% # isolate lowest e-value hit
ungroup()
# Filter by min. e-value
blast_dups <- blast_dups %>%
semi_join(blast_dups_eval)
# Remaining duplicates
blast_dups_logic2 <- duplicated(blast_dups$ASV)
blast_dups_asvs2 <- blast_dups %>%
add_column(duplicated = blast_dups_logic2) %>%
filter(duplicated==TRUE) %>%
select(ASV) %>%
unique() %>%
as.list()
blast_dups2 <- filter(blast_dups, ASV %in% blast_dups_asvs2$ASV)
blast_dups2
# Isolate OTU hits from taxonomy info
tax_dups <- filter(incorp_tax, OTU %in% unique(blast_dups2$blast_OTU)) %>%
unique()
# Merge with blast results
blast_dups2 <- blast_dups2 %>%
left_join(tax_dups, by=join_by(blast_OTU==OTU))
blast_dups2
# Phylum level
blast_dups2 %>%
ggplot(aes(x=Phylum, y=blast_identity, color=ASV)) +
geom_point(alpha=0.8) +
facet_wrap(~ASV, scales = "free") +
theme_test() +
theme(legend.position = "none",
axis.text.y = element_blank())
# Class
blast_dups2 %>%
ggplot(aes(x=Class, y=blast_identity, color=ASV)) +
geom_point(alpha=0.8) +
facet_wrap(~ASV, scales = "free") +
theme_test() +
theme(legend.position = "none",
axis.text.y = element_blank())
# Order
blast_dups2 %>%
ggplot(aes(x=Order, y=blast_identity, color=ASV)) +
geom_point(alpha=0.8) +
facet_wrap(~ASV, scales = "free") +
theme_test() +
theme(legend.position = "none",
axis.text.y = element_blank())
# Family
blast_dups2 %>%
ggplot(aes(x=Family, y=blast_identity, color=ASV)) +
geom_point(alpha=0.8) +
facet_wrap(~ASV, scales = "free") +
theme_test() +
theme(legend.position = "none",
axis.text.y = element_blank())
# Genus
blast_dups2 %>%
ggplot(aes(x=Genus, y=blast_identity, color=ASV)) +
geom_point(alpha=0.8) +
facet_wrap(~ASV, scales = "free") +
theme_test() +
theme(legend.position = "none",
axis.text.y = element_blank())
# Species
blast_dups2 %>%
ggplot(aes(x=Species, y=blast_identity, color=ASV)) +
geom_point(alpha=0.8) +
facet_wrap(~ASV, scales = "free") +
theme_test() +
theme(legend.position = "none",
axis.text.y = element_blank())
# Put single hits back in with duplicate hits
blast_mh <- bind_rows(blast_sing, blast_dups) %>%
mutate(multiple_hit=if_else(ASV %in% blast_dups_asvs2$ASV, "yes", "no")) # Add multiple hit warning column
blast_mh
# Import growth data
growth <- readRDS("../data_intermediate/NIFA_grests_final_ind.rds")
# Paprica estimates
pap <- readRDS("../data_intermediate/NIFA_paprica_ests.rds")
# ASV averages
growth_asv <- growth %>%
inner_join(pap) %>%
mutate(start_abund_corr = start_abund/n16S,
end_abund_corr = end_abund/n16S,
change_abund_corr = change_abund/n16S) %>%
group_by(Soil, ASV) %>%
summarize(g = mean(g),
start_day = mean(start_day),
end_day = mean(end_day),
start_abund_corr = mean(start_abund),
end_abund_corr = mean(end_abund),
change_abund_corr = mean(change_abund_corr),
n16S = mean(n16S),
genome_size = mean(genome_size)) %>%
ungroup()
# g
growth_asv %>%
pivot_wider(c(ASV), names_from=Soil, values_from=g) %>%
filter(complete.cases(Ag) & complete.cases(Meadow)) %>%
ggplot(aes(x=Ag, y=Meadow)) +
geom_point() +
geom_abline(slope=1, linetype=2) +
labs(x="Ag g", y="Meadow g") +
theme_test()
# start day
growth_asv %>%
pivot_wider(c(ASV), names_from=Soil, values_from=start_day) %>%
filter(complete.cases(Ag) & complete.cases(Meadow)) %>%
ggplot(aes(x=Ag, y=Meadow)) +
geom_point() +
geom_abline(slope=1, linetype=2) +
labs(x="Ag lag", y="Meadow lag") +
theme_test()
# Start abund
growth_asv %>%
pivot_wider(c(ASV), names_from=Soil, values_from=start_abund_corr) %>%
filter(complete.cases(Ag) & complete.cases(Meadow)) %>%
ggplot(aes(x=Ag, y=Meadow)) +
geom_point() +
geom_abline(slope=1, linetype=2) +
labs(x="Ag start abund", y="Meadow abund") +
theme_test()
# end abund
growth_asv %>%
pivot_wider(c(ASV), names_from=Soil, values_from=end_abund_corr) %>%
filter(complete.cases(Ag) & complete.cases(Meadow)) %>%
ggplot(aes(x=Ag, y=Meadow)) +
geom_point() +
geom_abline(slope=1, linetype=2) +
labs(x="Ag end abund", y="Meadow end abund") +
theme_test()
# change abund
growth_asv %>%
pivot_wider(c(ASV), names_from=Soil, values_from=change_abund_corr) %>%
filter(complete.cases(Ag) & complete.cases(Meadow)) %>%
ggplot(aes(x=Ag, y=Meadow)) +
geom_point() +
geom_abline(slope=1, linetype=2) +
labs(x="Ag change abund", y="Meadow change abund") +
theme_test()
# Simplify
incorp_simp <- data.frame()
for (o in unique(incorp_sig$OTU)) {
for (s in unique(incorp_sig[incorp_sig$OTU==o,]$substrate)) {
data_os <- filter(incorp_sig, OTU==o & substrate==s) # isolate substrates that were incorporated
first_day <- min(data_os$day)
this_row <- bind_cols(OTU=o, substrate=s, first_day=first_day)
incorp_simp <- bind_rows(incorp_simp, this_row)
}
}
incorp_simp
blast_incorp <- full_join(incorp_simp, blast_mh, by=join_by(OTU==blast_OTU)) %>%
filter(!is.na(ASV)) %>% # remove incorporator OTUs that did not match an ASV
rename(blast_OTU=OTU, incorp_firstday=first_day)
blast_incorp
# Parse
blast_incorp_simp <- data.frame()
for (a in unique(blast_incorp$ASV)) {
data_a <- filter(blast_incorp, ASV==a) %>%
group_by(ASV, substrate, blast_identity, blast_evalue) %>%
summarize(incorp_firstday = min(incorp_firstday)) %>%  # isolate first day of incorporation among multiple hits (if any)
ungroup() %>%
unique()
blast_incorp_simp <- bind_rows(blast_incorp_simp, data_a)
}
# Visualize
blast_incorp_simp %>%
ggplot(aes(x=substrate, y=incorp_firstday)) +
geom_jitter() +
geom_hline(yintercept=c(3,6,14,30), linetype=2) +
theme_test()
mean(blast_incorp_simp$blast_identity)
median(blast_incorp_simp$blast_identity)
min(blast_incorp_simp$blast_identity)
max(blast_incorp_simp$blast_identity)
hist(blast_incorp_simp$blast_identity, main="Histogram", xlab="Percent identity to nearest BLAST hit")
mean(blast_incorp_simp$blast_evalue)
median(blast_incorp_simp$blast_evalue)
min(blast_incorp_simp$blast_evalue)
max(blast_incorp_simp$blast_evalue)
hist(blast_incorp_simp$blast_evalue, main="Histogram", xlab="Evalue of nearest BLAST hit")
# Summary table
blast_incorp_simp %>%
group_by(substrate) %>%
summarize(total = n())
# Visualize
blast_incorp_simp %>%
group_by(substrate) %>%
summarize(total = n()) %>%
ungroup() %>%
ggplot(aes(x=reorder(substrate, -total), y=total)) +
geom_col() +
labs(title="ASV hits to incorporators", y="ASVs capable of incorporation", x="substrate") +
theme_test()
blast_incorp_simp %>%
group_by(substrate, incorp_firstday) %>%
summarize(total = n()) %>%
ungroup() %>%
ggplot(aes(x=reorder(substrate, -total), y=total)) +
geom_col() +
facet_wrap(~incorp_firstday) +
labs(title="ASV hits to incorporators by day of earliest incorporation observed", y="ASVs capable of incorporation", x="substrate") +
theme_test() +
theme(axis.text.x=element_text(angle=45, hjust=1))
# Paprica estimates
pap <- readRDS("../data_intermediate/NIFA_paprica_ests.rds") %>%
select(ASV, n16S, genome_size)
# Growth estimates
growth_asv <- readRDS("../data_intermediate/NIFA_grests_final_ind.rds") %>%
mutate(length = end_day-start_day) %>%
select(ASV, Soil, Replicate, g, start_day, length, start_abund, end_abund, change_abund) %>%
left_join(pap) %>%
group_by(ASV, Soil) %>%
summarize(g = mean(g),
start_day = mean(start_day),
length = mean(length),
start_abund_corr = mean(start_abund)/mean(n16S),
end_abund_corr = mean(end_abund)/mean(n16S),
change_abund_corr = mean(change_abund)/mean(n16S),
n16S = mean(n16S),
genome_size = mean(genome_size)) %>%
ungroup()
# Combine with incorporation profiles
growth_incorp <- growth_asv %>%
right_join(blast_incorp_simp)
growth_incorp
# g
growth_incorp %>%
ggplot(aes(x=substrate, y=log(g), color=Soil)) +
geom_violin() +
geom_jitter(alpha=0.5) +
theme_test()
# lag
growth_incorp %>%
ggplot(aes(x=substrate, y=start_day, color=Soil)) +
geom_violin() +
geom_jitter(alpha=0.5) +
theme_test()
# Length
growth_incorp %>%
ggplot(aes(x=substrate, y=length, color=Soil)) +
geom_violin() +
geom_jitter(alpha=0.5) +
theme_test()
# start abund
growth_incorp %>%
ggplot(aes(x=substrate, y=log(start_abund_corr), color=Soil)) +
geom_violin() +
geom_jitter(alpha=0.5) +
theme_test()
# end abund
growth_incorp %>%
ggplot(aes(x=substrate, y=log(end_abund_corr), color=Soil)) +
geom_violin() +
geom_jitter(alpha=0.5) +
theme_test()
# change abund corr
growth_incorp %>%
ggplot(aes(x=substrate, y=log(change_abund_corr), color=Soil)) +
geom_violin() +
geom_jitter(alpha=0.5) +
theme_test()
# n16S
growth_incorp %>%
ggplot(aes(x=substrate, y=n16S, color=Soil)) +
geom_violin() +
geom_jitter(alpha=0.5) +
theme_test()
# genome size
growth_incorp %>%
ggplot(aes(x=substrate, y=genome_size, color=Soil)) +
geom_violin() +
geom_jitter(alpha=0.5) +
theme_test()
